spring:
  application:
    name: studia-backend
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
    
  datasource:
    # Heroku DATABASE_URL format: postgres://username:password@host:port/database
    # Spring needs jdbc:postgresql://host:port/database
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/studia_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true}
    username: ${DATABASE_USERNAME:studia_user}
    password: ${DATABASE_PASSWORD:studia_password}
    driver-class-name: ${DATABASE_DRIVER:com.mysql.cj.jdbc.Driver}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10

  h2:
    console:
      enabled: false
      path: /h2-console
    
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: ${HIBERNATE_DIALECT:org.hibernate.dialect.MySQLDialect}
        format_sql: false
    show-sql: ${JPA_SHOW_SQL:false}
    
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      
  jackson:
    serialization:
      write-dates-as-timestamps: false
      write-date-timestamps-as-nanoseconds: false
    date-format: yyyy-MM-dd'T'HH:mm:ss
    time-zone: UTC
      
  redis:
    host: localhost
    port: 6379
    enabled: false
    
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:dummy}
            client-secret: ${GOOGLE_CLIENT_SECRET:dummy}
            scope:
              - email
              - profile
              
server:
  port: ${PORT:8080}
  
jwt:
  secret: ${JWT_SECRET:S3l2UGx0VmJGRlJ5eWZVSkd0dHBMa3hKUmVaZW5kZXVwZ3dkV1JXb3FBU2RLRW5aQ3JZR29CTDJnSVk4Y1ZTSkVOVXpHNA==}
  expiration: ${JWT_EXPIRATION:86400000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}
  
openai:
  api:
    key: ${OPENAI_API_KEY:test-key}
    url: https://api.openai.com/v1/chat/completions
    
claude:
  api:
    key: ${CLAUDE_API_KEY:test-key}
    url: https://api.anthropic.com/v1/messages
    
ai:
  model: ${AI_MODEL:openai}
    
file:
  upload:
    path: ${FILE_UPLOAD_PATH:./uploads}
    
logging:
  level:
    Study.Assistant.Studia: ${LOG_LEVEL:DEBUG}
    Study.Assistant.Studia.controller: ${LOG_LEVEL:DEBUG}
    Study.Assistant.Studia.service: ${LOG_LEVEL:DEBUG}
    Study.Assistant.Studia.service.AIService: DEBUG
    Study.Assistant.Studia.exception: ${LOG_LEVEL:DEBUG}
    org.springframework.web: ${LOG_LEVEL:INFO}
    org.springframework.security: ${LOG_LEVEL:INFO}
    org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: ${LOG_LEVEL:ERROR}
    org.hibernate.SQL: ${LOG_LEVEL:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL:TRACE}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:app.log}
    max-size: 10MB
    max-history: 10
    
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
  allowed-headers: ${CORS_ALLOWED_HEADERS:*}
  expose-headers: ${CORS_EXPOSE_HEADERS:*}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  max-age: ${CORS_MAX_AGE:3600}

---
# Local profile
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://localhost:3306/studia_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
    username: studia_user
    password: studia_password
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    show-sql: true

---
# Heroku profile
spring:
  config:
    activate:
      on-profile: heroku
  datasource:
    url: ${JDBC_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
